name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
    
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run basic tests
      run: |
        cd backend
        python -c "import main; print('âœ… Main module imports successfully')"
        python -m pytest tests/test_main.py::test_health_check -v
        python -m pytest tests/test_main.py::test_api_docs -v

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Clean and install dependencies
      run: |
        cd frontend
        rm -rf node_modules
        npm install
    
    - name: Build application
      run: |
        cd frontend
        npm run build

  # docker-build:
  #   runs-on: ubuntu-latest
  #   needs: [backend-tests, frontend-tests]
  #   if: github.ref == 'refs/heads/main'
  #   
  #   steps:
  #   - uses: actions/checkout@v4
  #   
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v3
  #   
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v3
  #     with:
  #       username: ${{ secrets.DOCKER_USERNAME }}
  #       password: ${{ secrets.DOCKER_PASSWORD }}
  #   
  #   - name: Build and push backend
  #     uses: docker/build-push-action@v5
  #     with:
  #       context: ./backend
  #       push: true
  #       tags: ${{ secrets.DOCKER_USERNAME }}/watchlist-backend:latest
  #       cache-from: type=gha
  #       cache-to: type=gha,mode=max
  #   
  #   - name: Build and push frontend
  #     uses: docker/build-push-action@v5
  #     with:
  #       context: ./frontend
  #       push: true
  #       tags: ${{ secrets.DOCKER_USERNAME }}/watchlist-frontend:latest
  #       cache-from: type=gha
  #       cache-to: type=gha,mode=max

  # security-scan:
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #   - uses: actions/checkout@v4
  #   
  #   - name: Run Trivy vulnerability scanner
  #     uses: aquasecurity/trivy-action@master
  #     with:
  #       scan-type: 'fs'
  #       scan-ref: '.'
  #       format: 'sarif'
  #       output: 'trivy-results.sarif'
  #   
  #   - name: Upload Trivy scan results to GitHub Security tab
  #     uses: github/codeql-action/upload-sarif@v2
  #     with:
  #       sarif_file: 'trivy-results.sarif'
